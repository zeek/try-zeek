version: '3'
services:
  redis:
    image: redis
    restart: always
    networks:
      - backend
    volumes:
      - ${TRYZEEK_DATA:-./tryzeek_data}:/data

  worker:
    build: manager
    command: rq worker --with-scheduler --url redis://redis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /brostuff:/brostuff
    restart: always
    deploy:
      replicas: 5
    depends_on:
      - redis
    networks:
      - backend

  version-updater:
    build: manager
    command: python3 version.py -i 4020
    init: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
      - redis
    networks:
      - backend

  api:
    build: manager
    command: gunicorn -w 4 -b 0.0.0.0 app:app --log-file - --max-requests 500 --timeout 20
    restart: always
    depends_on:
      - redis
    networks:
      - backend
      - frontend

  proxy:
    image: caddy
    restart: always
    environment:
      - ACME_AGREE=true
      - ENABLE_TELEMETRY=false
      - SITE_ADDRESS=${SITE_ADDRESS:-try.zeek.org:443, try.bro.org:443}
    volumes:
      - $HOME/.caddy:/data
      - ./containers/caddy/Caddyfile.${CADDY-tls}:/etc/caddy/Caddyfile
    networks:
      - frontend
    ports:
      - "80:80/tcp"
      - "443:443/tcp"

networks:
  backend:
  frontend:
